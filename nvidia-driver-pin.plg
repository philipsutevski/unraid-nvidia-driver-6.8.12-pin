<?xml version="1.0" encoding="utf-8"?>
<PLUGIN name="nvidia-driver-pin" author="helper" version="2024.01.19" launch="Settings/nvidia-driver" min="6.9.0-beta31" support="https://forums.unraid.net/topic/98978-plugin-nvidia-driver/">

<CHANGES>Companion plugin: persists Nvidia repo/tag and driver_version pin at boot without modifying the official plugin during install.</CHANGES>

<FILE Run="/bin/bash">
<INLINE><![CDATA[
set -e

PLUGIN_DIR="/boot/config/plugins/nvidia-driver"
EMHTTP_DIR="/usr/local/emhttp/plugins/nvidia-driver"
PACKAGES_DIR="/boot/config/plugins/nvidia-driver/packages"
TAG_OVERRIDE="6.8.12-Unraid"
REPO_TARGET="ich777/unraid-nvidia-driver"
DRIVER_PIN="470.239.06"

mkdir -p "$PLUGIN_DIR" "$PACKAGES_DIR"

PIN_SCRIPT="$PLUGIN_DIR/pin-on-boot.sh"
cat > "$PIN_SCRIPT" <<'EOS'
#!/bin/bash
PLUGIN_DIR="/boot/config/plugins/nvidia-driver"
EMHTTP_DIR="/usr/local/emhttp/plugins/nvidia-driver"
TAG_OVERRIDE="6.8.12-Unraid"
REPO_TARGET="ich777/unraid-nvidia-driver"
DRIVER_PIN="470.239.06"
PACKAGES_DIR="/boot/config/plugins/nvidia-driver/packages"

# Exit silently if official plugin is not installed yet
[ -f "$EMHTTP_DIR/include/exec.sh" ] || exit 0

for f in \
  "$EMHTTP_DIR/include/update-check.sh" \
  "$EMHTTP_DIR/include/download.sh" \
  "$EMHTTP_DIR/include/exec.sh"; do
  [ -f "$f" ] || continue
  sed -i -E 's|api.github.com/repos/(unraid|ich777)/unraid-nvidia-driver|api.github.com/repos/ich777/unraid-nvidia-driver|g' "$f" 2>/dev/null || true
  sed -i -E 's|github.com/(unraid|ich777)/unraid-nvidia-driver/releases|github.com/ich777/unraid-nvidia-driver/releases|g' "$f" 2>/dev/null || true
  sed -i 's/^KERNEL_V=.*/KERNEL_V="'"${TAG_OVERRIDE}"'"/' "$f" 2>/dev/null || true
  sed -i 's/^export KERNEL_V=.*/export KERNEL_V="'"${TAG_OVERRIDE}"'"/' "$f" 2>/dev/null || true
done

mkdir -p "$PLUGIN_DIR"
if [ ! -f "$PLUGIN_DIR/settings.cfg" ]; then
  cat > "$PLUGIN_DIR/settings.cfg" <<CFG
first_installation=true
driver_version=latest
disable_xconfig=false
update_check=false
CFG
fi
sed -i "/driver_version=/c\\driver_version=${DRIVER_PIN}" "$PLUGIN_DIR/settings.cfg"
sed -i "/update_check=/c\\update_check=false" "$PLUGIN_DIR/settings.cfg"

rm -f /tmp/nvidia_driver /tmp/nvos_driver /tmp/nvidia_branches
"$EMHTTP_DIR/include/exec.sh" update >/dev/null 2>&1 || true

# Ensure the pinned driver package is downloaded
if ! ls -1 "$PACKAGES_DIR/${TAG_OVERRIDE%%-*}/" 2>/dev/null | grep -q "^nvidia-${DRIVER_PIN}-${TAG_OVERRIDE}-" ; then
  # settings.cfg already set to DRIVER_PIN by this plugin; download.sh will fetch the exact package
  "$EMHTTP_DIR/include/download.sh" >/dev/null 2>&1 || true
fi

# If installed driver differs, install the pinned one now
INSTALLED_V=$(modinfo nvidia 2>/dev/null | awk '/^version:/{print $2}')
if [ -n "$INSTALLED_V" ] && [ "$INSTALLED_V" != "$DRIVER_PIN" ]; then
  PKG_FILE=$(ls -1 "$PACKAGES_DIR/${TAG_OVERRIDE%%-*}/" 2>/dev/null | grep "^nvidia-${DRIVER_PIN}-${TAG_OVERRIDE}-" | head -n1)
  if [ -n "$PKG_FILE" ] && [ -f "$PACKAGES_DIR/${TAG_OVERRIDE%%-*}/$PKG_FILE" ]; then
    modprobe -r nvidia_drm nvidia_modeset nvidia 2>/dev/null || true
    /sbin/installpkg "$PACKAGES_DIR/${TAG_OVERRIDE%%-*}/$PKG_FILE" >/dev/null 2>&1 || true
    depmod -a >/dev/null 2>&1 || true
    modprobe nvidia 2>/dev/null || true
    logger -t nvidia-driver-pin "Installed Nvidia driver $DRIVER_PIN from $PKG_FILE"
  else
    logger -t nvidia-driver-pin "Pinned package for $DRIVER_PIN not found after download attempt"
  fi
fi
EOS
chmod +x "$PIN_SCRIPT"

# Add to go file without running immediately to avoid early emhttp/plugin conflicts
GO_FILE="/boot/config/go"
if [ -f "$GO_FILE" ]; then
  if ! grep -q "/boot/config/plugins/nvidia-driver/pin-on-boot.sh" "$GO_FILE" ; then
    echo "/bin/bash /boot/config/plugins/nvidia-driver/pin-on-boot.sh" >> "$GO_FILE"
  fi
else
  echo "#!/bin/bash" > "$GO_FILE"
  echo "/bin/bash /boot/config/plugins/nvidia-driver/pin-on-boot.sh" >> "$GO_FILE"
  chmod +x "$GO_FILE"
fi
]]></INLINE>
</FILE>

</PLUGIN>
